function [TP,iLp_star,w_star_v,...
        E,V,EnteringF0,EnteringW0,EnteringLam_Idx,theta_star] = solveGivenU(...
        CV_tol,Niter,nPhi,nL,sep_pol,delta,pi_Phi,...
        Phi_grid,BETA,Lambda_vect,w_star_pre,U,pi_z,r,K,D,tau,w_star_pre_cons,...
        Ppsi,nZ,init_Prod,b,rra,commitType,typeu,preTaxOutput,gamma_matching)
  
  %Solve the SPP
%   [TP,iLp_star,w_star_v] = solvePareto(CV_tol,Niter,nPhi,nL,sep_pol,delta,pi_Phi,...
%     Phi_grid,BETA,Lambda_vect,w_star_pre,U,r,K,D,tau,w_star_pre_cons,commitType,...
%     preTaxOutput);
  
  %Converting the solution from Lagrange multiplier space to promised value space
  [E,V,w_star_v,iLp_star] = calcEV_fromW(CV_tol,Niter,nPhi,nL,sep_pol,delta,pi_Phi,...
    Phi_grid,BETA,Lambda_vect,w_star_pre,U,r,K,D,tau,w_star_pre_cons,commitType,preTaxOutput);
  TP                        = zeros(nPhi,nL);
  %Solve the search problem
  [EnteringF0,EnteringW0,EnteringLam_Idx,theta_star] = ...
    solveSearch(nZ,init_Prod,delta,E,V,U,BETA,b,rra,Lambda_vect,sep_pol,...
    typeu,pi_z,gamma_matching);

end